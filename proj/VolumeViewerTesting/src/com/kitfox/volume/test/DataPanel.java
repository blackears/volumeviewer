/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DataPanel.java
 *
 * Created on Jan 2, 2010, 8:14:02 PM
 */

package com.kitfox.volume.test;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author kitfox
 */
public class DataPanel extends javax.swing.JPanel
        implements PropertyChangeListener
{
    private static final long serialVersionUID = 0;

    JFileChooser fileChooser = new JFileChooser();
    {
        FileFilter filter = new FileFilter()
        {
            @Override
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().endsWith(".zip");
            }

            @Override
            public String getDescription() {
                return "Zip file of images (*.zip)";
            }
        };
        fileChooser.setFileFilter(filter);
        fileChooser.setCurrentDirectory(new File("."));
    }


    private DataSource dataSource;

    /** Creates new form DataPanel */
    public DataPanel()
    {
        initComponents();
    }

    public void propertyChange(PropertyChangeEvent evt)
    {
        updateFromDataSource();
    }

    private void updateFromDataSource()
    {
        if (dataSource == null)
        {
            return;
        }
        URL url = dataSource.getDataSource();
        text_url.setText(url == null ? "" : url.toExternalForm());
    }

    private void loadFromUrl()
    {
        URL url;
        try {
            url = new URL(text_url.getText());
        } catch (MalformedURLException ex) {
//            Logger.getLogger(DataPanel.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        if (dataSource == null)
        {
            return;
        }
        dataSource.setDataSource(url);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        text_url = new javax.swing.JTextField();
        bn_browse = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        bn_head1 = new javax.swing.JButton();
        bn_head2 = new javax.swing.JButton();

        jLabel1.setText("URL");

        text_url.setToolTipText("URL of .zip file containing image slices");
        text_url.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_urlActionPerformed(evt);
            }
        });
        text_url.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_urlFocusLost(evt);
            }
        });

        bn_browse.setText("...");
        bn_browse.setToolTipText("Browse for files on local disk");
        bn_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bn_browseActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Presets"));

        bn_head1.setText("Head 1");
        bn_head1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bn_head1ActionPerformed(evt);
            }
        });

        bn_head2.setText("Head 2");
        bn_head2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bn_head2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bn_head1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bn_head2)
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bn_head1)
                    .addComponent(bn_head2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_url, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bn_browse)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text_url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bn_browse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bn_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bn_browseActionPerformed
        if (dataSource == null)
        {
            return;
        }

        URL url = dataSource.getDataSource();
        if (url != null && "file".equals(url.getProtocol()))
        {
            File file = new File(url.getPath());
            fileChooser.setSelectedFile(file);
        }

        int res = fileChooser.showOpenDialog(this);

        if (res != JFileChooser.APPROVE_OPTION)
        {
            return;
        }

        File file = fileChooser.getSelectedFile();
        try {
            dataSource.setDataSource(file.toURI().toURL());
        } catch (MalformedURLException ex) {
            Logger.getLogger(DataPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bn_browseActionPerformed

    private void text_urlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_urlActionPerformed
        loadFromUrl();
    }//GEN-LAST:event_text_urlActionPerformed

    private void text_urlFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_urlFocusLost
        loadFromUrl();
    }//GEN-LAST:event_text_urlFocusLost

    private void bn_head1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bn_head1ActionPerformed
        dataSource.setDataSource(DataPanel.class.getResource("/mrbrain-8bit.zip"));
    }//GEN-LAST:event_bn_head1ActionPerformed

    private void bn_head2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bn_head2ActionPerformed
        dataSource.setDataSource(DataPanel.class.getResource("/cthead-8bit.zip"));
    }//GEN-LAST:event_bn_head2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bn_browse;
    private javax.swing.JButton bn_head1;
    private javax.swing.JButton bn_head2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField text_url;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the dataSource
     */
    public DataSource getDataSource() {
        return dataSource;
    }

    /**
     * @param dataSource the dataSource to set
     */
    public void setDataSource(DataSource dataSource)
    {
        if (this.dataSource != null)
        {
            this.dataSource.removePropertyChangeListener(this);
        }
        this.dataSource = dataSource;
        if (this.dataSource != null)
        {
            this.dataSource.addPropertyChangeListener(this);
        }
        updateFromDataSource();
    }

}
